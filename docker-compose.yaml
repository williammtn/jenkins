services:
  spring-app:
    image: spring-poc-image
    container_name: spring-poc
    ports:
      - "8001:8001"
    networks:
      - jenkins-sonarqube-net
    volumes:
      - spring-jenkins-app-data:/app/data
      - spring-jenkins-app-logs:/app/logs

  jenkins:
    image: jenkins/jenkins
    container_name: jenkins-with-docker
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins:/var/jenkins_home
    networks:
      - jenkins-sonarqube-net
    privileged: true
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube-jenkins
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_jenkins_data:/opt/sonarqube/data
      - sonarqube_jenkins_logs:/opt/sonarqube/logs
      - sonarqube_jenkins_extensions:/opt/sonarqube/extensions
      - sonarqube_jenkins_temp:/opt/sonarqube/temp
    networks:
      - jenkins-sonarqube-net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

volumes:
  jenkins:
  sonarqube_jenkins_data:
  sonarqube_jenkins_logs:
  sonarqube_jenkins_extensions:
  sonarqube_jenkins_temp:
  spring-jenkins-app-data: # Volume pour les donn√©es de l'application Spring Boot
  spring-jenkins-app-logs: # Volume pour les logs de l'application Spring Boot

networks:
  jenkins-sonarqube-net:
    driver: bridge
